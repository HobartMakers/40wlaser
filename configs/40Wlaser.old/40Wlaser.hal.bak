# Generated by stepconf at Sun Dec  4 15:44:33 2011
# If you make changes to this file, they will be
# overwritten when you run stepconf again
loadrt threads name1=mask-thread period1=22000
loadrt millkins
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES
loadrt probe_parport
loadrt hal_parport cfg="0x378 out  "
setp parport.0.reset-time 3000
loadrt stepgen step_type=0,0,0
loadrt comp names=comp-mask-lte
loadrt not names=not-mask-reset,not-mask-not-empty
loadrt xor2 names=xor2-mask-test
loadrt and2 names=and2-mask-forward,and2-laser-mask,and2-laser-final,pwm-laser
loadrt or2 names=or2-mask-command-done,or2-mask-not-ffw,or2-mask-read,or2-laser-gcode,or2-laser-final

setp millkins.skew -0.01082487

addf parport.0.read base-thread
addf stepgen.make-pulses base-thread
addf parport.0.write base-thread
addf parport.0.reset base-thread

addf stepgen.capture-position servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf stepgen.update-freq servo-thread

###################################################################################
# Raster Mask - stream in laser on/off commands behind AXIS's back
# Input stream format: raster Mask - stream in laser on/off commands behind AXIS's back
# Input stream format: reset beam xop xarg
# reset: 0=mask command 1=reset (begin mask sequence with "1 0 0 0", every other command starts with 0)
# beam: 0=off 1=on
# xop: X axis comparison operation 0=less-or-equal 1=greater
# xarg: X axis comparison operand

loadrt streamer depth=256 cfg="bbbf"
net mask-reset <= streamer.0.pin.0
net mask-beam <= streamer.0.pin.1
net mask-xop <= streamer.0.pin.2
net mask-xarg <= streamer.0.pin.3
net mask-empty <= streamer.0.empty
net mask-read => streamer.0.enable

# hardware reported X axis position
net motion-xpos-fb <= axis.0.joint-pos-fb

# mask-lte <= motion-xpos-fb < mask-xarg
addf comp-mask-lte mask-thread
net motion-xpos-fb => comp-mask-lte.in0
net mask-xarg => comp-mask-lte.in1
net mask-lte <= comp-mask-lte.out

# mask-test <= mask-xop ^ mask-lte
addf xor2-mask-test mask-thread
net mask-xop => xor2-mask-test.in0
net mask-lte => xor2-mask-test.in1
net mask-test <= xor2-mask-test.out

# if job is running, read only if test is true or reset
# if job is not running, read until reset
# mask-read <= (mask-test || mask-reset) || !mask-reset

addf or2-mask-command-done mask-thread
net mask-test => or2-mask-command-done.in0
net mask-reset => or2-mask-command-done.in1
net mask-command-done <= or2-mask-command-done.out

addf not-mask-reset mask-thread
net mask-reset => not-mask-reset.in
net mask-not-reset <= not-mask-reset.out

addf or2-mask-read mask-thread
net mask-command-done => or2-mask-read.in0
net mask-not-reset => or2-mask-read.in1
net mask-read <= or2-mask-read.out

# laser-mask <= mask-not-empty && mask-beam
addf not-mask-not-empty mask-thread
net mask-empty => not-mask-not-empty.in
net mask-not-empty <= not-mask-not-empty.out

addf and2-laser-mask mask-thread
net mask-beam => and2-laser-mask.in0
net mask-not-empty => and2-laser-mask.in1
net laser-mask <= and2-laser-mask.out

addf streamer.0 mask-thread

# Raster Mask - end
#######################################################################

# fine laser control, wired to digital output 0 (M62 P0/M63 P0), realtime
net laser-gate <= motion.digital-out-00

# laser-final <= laser-gate | laser-mask
addf or2-laser-final mask-thread
net laser-gate => or2-laser-final.in0
net laser-mask => or2-laser-final.in1
#net laser-final <= or2-laser-final.out


# reset: 0=mask command 1=reset (begin mask sequence with "1 0 0 0", every other command starts with 0)
# beam: 0=off 1=on
# xop: X axis comparison operation 0=less-or-equal 1=greater
# xarg: X axis comparison operand



net xenable => parport.0.pin-01-out
net xstep => parport.0.pin-02-out
setp parport.0.pin-02-out-reset 1
net ydir => parport.0.pin-03-out
setp parport.0.pin-14-out-invert 1
net xdir => parport.0.pin-14-out
net ystep => parport.0.pin-16-out
setp parport.0.pin-16-out-reset 1


net min-home-x <= parport.0.pin-10-in-not
net max-home-y <= parport.0.pin-11-in-not


setp stepgen.0.position-scale [AXIS_0]SCALE
setp stepgen.0.steplen 1
setp stepgen.0.stepspace 0
setp stepgen.0.dirhold 2500
setp stepgen.0.dirsetup 5000
setp stepgen.0.maxaccel [AXIS_0]STEPGEN_MAXACCEL
net xpos-cmd axis.0.motor-pos-cmd => stepgen.0.position-cmd
net xpos-fb stepgen.0.position-fb => axis.0.motor-pos-fb
net xstep <= stepgen.0.step
net xdir <= stepgen.0.dir
net xenable axis.0.amp-enable-out => stepgen.0.enable
net min-home-x => axis.0.home-sw-in
net min-home-x => axis.0.neg-lim-sw-in

setp stepgen.1.position-scale [AXIS_1]SCALE
setp stepgen.1.steplen 1
setp stepgen.1.stepspace 0
setp stepgen.1.dirhold 2500
setp stepgen.1.dirsetup 5000
setp stepgen.1.maxaccel [AXIS_1]STEPGEN_MAXACCEL
net ypos-cmd axis.1.motor-pos-cmd => stepgen.1.position-cmd
net ypos-fb stepgen.1.position-fb => axis.1.motor-pos-fb
net ystep <= stepgen.1.step
net ydir <= stepgen.1.dir
net yenable axis.1.amp-enable-out => stepgen.1.enable
net max-home-y => axis.1.home-sw-in
net max-home-y => axis.1.pos-lim-sw-in

net estop-out <= iocontrol.0.user-enable-out
net estop-out => iocontrol.0.emc-enable-in

#loadusr -W hal_manualtoolchange
#net tool-change iocontrol.0.tool-change => hal_manualtoolchange.change
#net tool-changed iocontrol.0.tool-changed <= hal_manualtoolchange.changed
#net tool-number iocontrol.0.tool-prep-number => hal_manualtoolchange.number
#net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared

loadrt pwmgen output_type=0 
addf pwmgen.update servo-thread
addf pwmgen.make-pulses base-thread
net spindle-speed-cmd motion.spindle-speed-out => pwmgen.0.value
net spindle-on motion.spindle-on => pwmgen.0.enable
# Set the spindle's top speed in RPM 
setp pwmgen.0.scale 100

# Set up the laser as an AND between the PWM spindle output and the enable line (digital out 0)
addf pwm-laser base-thread
#net laser-enable pwm-laser.in0 <= laser-final
net laser-enable pwm-laser.in0 <= or2-laser-final.out
net laser-pwm pwm-laser.in1 <= pwmgen.0.pwm
net laser-output parport.0.pin-07-out <= pwm-laser.out
setp parport.0.pin-07-out-invert 1


